-- Updates colours to support UI elements for additional peers while avoiding those
-- that affect gameplay such as orange and yellow

local num_player_slots = BigLobbyGlobals:num_player_slots()

-- Override colours here, RGB values, divide by 255 to get a 0-1 value range that game wants
-- Commented values to the right are for an editor plugin that visualizes the colour.
-- Original colours for first 4 players:
local green        = Vector3(194, 252, 151) / 255 --rgb(194, 252, 151)
local blue         = Vector3(120, 183, 204) / 255 --rgb(120, 183, 204)
local red          = Vector3(178, 104, 89)  / 255 --rgb(178, 104, 89)
local brown        = Vector3(204, 161, 102) / 255 --rgb(204, 161, 102)
-- Additional colours for players:
local pink         = Vector3(255, 182, 193) / 255 --rgb(255, 182, 193)
local purple       = Vector3(186, 90, 186)  / 255 --rgb(186, 90, 186)
local darkblue     = Vector3(39, 60, 189)   / 255 --rgb(39, 60, 189)
local orange       = Vector3(255, 120, 0)   / 255 --rgb(255, 120, 0)
local darkgreen    = Vector3(0, 150, 0)     / 255 --rgb(0, 150, 0)
local brightpurple = Vector3(255, 100, 230) / 255 --rgb(255, 100, 230)
local gray         = Vector3(175, 175, 175) / 255 --rgb(175, 175, 175)
-- AI assigned colour:
local team_ai      = Vector3(0.2, 0.8, 1)         --rgb(51, 204, 255)

-- -- Fixed colours
-- tweak_data.peer_vector_colors = {
-- 	green,
-- 	blue,
-- 	red,
-- 	brown,
-- 	pink,
-- 	purple,
-- 	darkblue,
-- 	orange,
-- 	darkgreen,
-- 	brightpurple,
-- 	gray
-- }
--
-- -- This doesn't appear to be referenced, not sure why it still exists in codebase
-- tweak_data.peer_colors = {
-- 	"mrgreen",
-- 	"mrblue",
-- 	"mrred",
-- 	"mrpink",
-- 	"mrbrown",
-- 	"mrpurple",
-- 	"mrdarkblue",
-- 	"mrorange",
-- 	"mrdarkgreen",
-- 	"mrbrightpurple",
-- 	"mrgray"
-- }

-- Fixed colours
tweak_data.peer_vector_colors = {}

-- This doesn't appear to be referenced, not sure why it still exists in codebase
tweak_data.peer_colors = {}

-- Hue value in degrees
local red = 5
local orange = 20
local green = 110
local teal = 180
local blue = 220
local purple = 270
local pink = 320

local colours = {
	green,
	teal,
	blue,
	purple,
	pink,
	red,
	orange -- range limit, orange to green values will be ignored
}

-- Will generate a random hue based on the hue slice index used
function getNextRandHue(colour_index)
	colour_index = (colour_index % (#colours-1)) + 1
	return math.random(colours[colour_index], colours[colour_index+1])
end

local start_point = #tweak_data.peer_vector_colors
-- Make sure we have enough colours to support the number of player slots, creates random colours
if start_point < num_player_slots then
	-- We want random colours generated by the PRNG to be consistent across players, so use the same seed
	math.randomseed( 1337 )
	local steps = (360-65)/num_player_slots
	for i = start_point, num_player_slots do
		-- RGB channels
		local red, blue, green
		local random_colour
		-- red   = math.random(0, 255)
		-- green = math.random(0, 255)
		-- blue  = math.random(0, 255)
		-- random_colour = Vector3(red, green, blue) / 255
		log("step: " .. tostring(i*steps))
		local hue = (i)*steps + 125
		hue = hue % 360
		-- 20-85 hue range for orange to yellow
		if hue>20 then
			hue = hue+65
		end
		hue = getNextRandHue(i)
		-- random_colour = Vector3(_G.HUSL.huslp_to_rgb(hue, 75, 40))
		random_colour = Vector3(_G.HUSL.huslp_to_rgb(hue, 100, 60))

		table.insert(tweak_data.peer_vector_colors, random_colour)
		table.insert(tweak_data.peer_colors, tostring("team_colour_") .. i)
	end

	-- Make the seed randomish again, so other mods that rely on it don't get affected.
	math.randomseed( os.time() )
end

-- AI labels will use the last value so we add it at the end
table.insert(tweak_data.peer_vector_colors, team_ai)
table.insert(tweak_data.peer_colors, "mrai")

-- Dynamically added now based on peer_vector_colors table
tweak_data.chat_colors = {}
for i = 1, #tweak_data.peer_vector_colors do
	tweak_data.chat_colors[i] = Color(tweak_data.peer_vector_colors[i]:unpack())
end

-- Use the same colours created for chat for preplanning
tweak_data.preplanning_peer_colors = {}
for i = 1, #tweak_data.peer_vector_colors do
	tweak_data.preplanning_peer_colors[i] = Color(tweak_data.peer_vector_colors[i]:unpack())
end

tweak_data.team_ai.stop_action.distance = 10000000000000000

